using Microsoft.AspNetCore.Mvc;
using Microsoft.EntityFrameworkCore;

namespace ToDo.Api.Controllers;

/// <summary>
/// REST API ????????? ??? ?????????? ?????????? ToDo.
/// ????? ?????? ????? CRUD ???????? ??? ?????? ? ?????????? ????? HTTP endpoints.
/// </summary>
/// <remarks>
/// ToDoController ? ???????? API ??????????? ?? ??????????:
/// 
/// <strong>HTTP Endpoints:</strong>
/// - GET /todoitems - ????????? ???? ???????
/// - GET /todoitems/complete - ????????? ?????????? ???????  
/// - GET /todoitems/{id} - ????????? ??????????? ????????
/// - POST /todoitems - ????????? ?????? ????????
/// - PUT /todoitems/{id} - ????????? ????????? ????????
/// - DELETE /todoitems/{id} - ????????? ????????
/// 
/// <strong>???????????? ???????????:</strong>
/// - ???????????? Primary Constructor (C# 12+) ??? dependency injection
/// - ?????????? ???????? ??? ?????? ??????????????
/// - ????????? HTTP ?????? ???? ??? ?????? ?????????
/// - Entity Framework Core ??? ??????? ?? ?????
/// - ??????????? ???????????? JSON ????? ASP.NET Core
/// 
/// <strong>??????? ???????:</strong>
/// - 404 Not Found ??? ?????????? ???????
/// - 201 Created ??? ????????? ?????????
/// - 204 No Content ??? ????????? ?????????/?????????
/// - 200 OK ??? ????????? ????????? ?????
/// 
/// ????????? ????????????? ??? ?????? ? Single Page Applications (SPA)
/// ?? ?????????? ????????? ????? ??????????? REST API.
/// </remarks>
[ApiController]
[Route("todoitems")]
public class ToDoController(TodoDb _db) : ControllerBase
{
    /// <summary>
    /// ??????? ?????? ???? ??????? ? ???? ?????.
    /// ???????? ????? ???????? ??????? ??? ??????????.
    /// </summary>
    /// <returns>
    /// ActionResult ?? ??????? ?????? ???? ??????? ToDo ? ??????? JSON.
    /// HTTP 200 OK ? ??????? ??'????? Todo ??? ???????? ????? ???? ??????? ?????.
    /// </returns>
    /// <remarks>
    /// <strong>HTTP Method:</strong> GET
    /// <strong>Route:</strong> /todoitems
    /// <strong>Response:</strong> 200 OK + JSON ?????
    /// 
    /// <strong>??????????? ??????????:</strong>
    /// - ???????????? ToListAsync() ??? ???????????? ????????????
    /// - ?????????? ??? ???????? ? ???'??? (?????????? ????????? ??? ??????? ???????)
    /// - JSON ???????????? ??????? ??? ??????????? Todo
    /// - ???? ??????????? ???????????????? ? JSON ??????? ??
    /// 
    /// <strong>??????? ?????????:</strong>
    /// <code>
    /// HTTP 200 OK
    /// [
    ///   {
    ///     "id": 1,
    ///     "name": "?????? ??????",
    ///     "isComplete": false,
    ///     "description": "? ??????????? ????????",
    ///     "createdDate": "2024-01-15T10:30:00Z",
    ///     "dueDate": "2024-01-16",
    ///     "priority": "Medium",
    ///     "tags": ["shopping", "personal"]
    ///   }
    /// ]
    /// </code>
    /// 
    /// <strong>?????????? ????????????:</strong>
    /// - ???????????? ?????? ???? ???????
    /// - ????????????? ??????? ? ????????? ??????
    /// - ?????? ??? ??????????? ?????????? ?? ??????????
    /// </remarks>
    [HttpGet]
    public async Task<ActionResult<List<Todo>>> GetAllTodos()
    {
        List<Todo> todos = await _db.Todos.ToListAsync();
        
        return Ok(todos);
    }

    /// <summary>
    /// ??????? ?????? ????????? ???????? ? ???? ?????.
    /// ???????? ???????? ?? ???????? IsComplete = true.
    /// </summary>
    /// <returns>
    /// ActionResult ?? ??????? ?????? ?????????? ??????? ? ??????? JSON.
    /// HTTP 200 OK ? ??????? ?????????? Todo ??? ???????? ?????.
    /// </returns>
    /// <remarks>
    /// <strong>HTTP Method:</strong> GET
    /// <strong>Route:</strong> /todoitems/complete
    /// <strong>Response:</strong> 200 OK + JSON ?????
    /// 
    /// <strong>?????????? ?? ????? ??:</strong>
    /// ???????????? Where() ???????? ?? ???????????? ? SQL WHERE,
    /// ???? ?????????? ??????????? ?? ????? ???? ????? ??? ??????????? ??????????????.
    /// 
    /// <strong>SQL ????? (?????????):</strong>
    /// <code>
    /// SELECT * FROM Todos WHERE IsComplete = 1
    /// </code>
    /// 
    /// <strong>????????????:</strong>
    /// - ???????????? ?????? ?????????? ???????
    /// - ?????????? ????????? ?????
    /// - ???????? ?????????? ???????
    /// - ?????? ?????????????? ???????????
    /// 
    /// <strong>??????? ???????????? ????????:</strong>
    /// <code>
    /// fetch('/todoitems/complete')
    ///   .then(response => response.json())
    ///   .then(completedTodos => {
    ///     displayCompletedTasks(completedTodos);
    ///   });
    /// </code>
    /// 
    /// <strong>???????????:</strong>
    /// ??? ??????? ??????? ????? ?????????? ?????????:
    /// - ????????? (skip/take ?????????)
    /// - ????????? ?? ????? (??????? N ????)
    /// - ??????? ?? IsComplete ????????
    /// </remarks>
    [HttpGet("complete")]
    public async Task<ActionResult<List<Todo>>> GetCompleteTodos()
    {
        List<Todo> completedTodos = await _db.Todos
            .Where(t => t.IsComplete)
            .ToListAsync();

        return Ok(completedTodos);
    }

    /// <summary>
    /// ??????? ????????? ???????? ?? ???? ?????????? ???????????????.
    /// ??????? ????? ???????? ? ???? ????? ?? ???????? ???? ??? ??????? 404.
    /// </summary>
    /// <param name="id">?????????? ????????????? ???????? ??? ??????.</param>
    /// <returns>
    /// ActionResult ?? ??????? ???????? ???????? ??? HTTP 404 ???? ?? ????????.
    /// </returns>
    /// <remarks>
    /// <strong>HTTP Method:</strong> GET
    /// <strong>Route:</strong> /todoitems/{id}
    /// <strong>Response:</strong> 200 OK + JSON ??'??? ??? 404 Not Found
    /// 
    /// <strong>????????? ????????:</strong>
    /// - {id} ??????????? ????'???????? ?? ????????? int id ??????
    /// - ASP.NET Core ??????????? ??????? ?? id ? ??????
    /// - ???????????? ?????? id ??????? 400 Bad Request ???????????
    /// 
    /// <strong>?????? ??????:</strong>
    /// 1. FindAsync(id) - ????????????? ????? ?? ????????? ??????
    /// 2. ????????? ?? null (???????? ?? ?????)
    /// 3. ?????????? ???????????? HTTP ???????
    /// 
    /// <strong>???????? ??????????:</strong>
    /// 
    /// <em>???????? ?????:</em>
    /// <code>
    /// GET /todoitems/1
    /// HTTP 200 OK
    /// {
    ///   "id": 1,
    ///   "name": "????????? ??????",
    ///   "isComplete": false,
    ///   ...
    /// }
    /// </code>
    /// 
    /// <em>???????? ?? ????????:</em>
    /// <code>
    /// GET /todoitems/999
    /// HTTP 404 Not Found
    /// {
    ///   "type": "https://tools.ietf.org/html/rfc7231#section-6.5.4",
    ///   "title": "Not Found",
    ///   "status": 404
    /// }
    /// </code>
    /// 
    /// <strong>???????????? ????????:</strong>
    /// - ???????????? ??????? ????????
    /// - ??????????? ??????????? ????????
    /// - ????????? ????????? ????????
    /// - Deep linking ?? ?????????? ???????
    /// 
    /// <strong>???????????:</strong>
    /// FindAsync() ???????????? ??? Entity Framework ??? ?????????? ??????????????
    /// ??? ????????? ??????? ???? ? ????????.
    /// </remarks>
    [HttpGet("{id}")]
    public async Task<ActionResult<Todo>> GetTodo(int id)
    {
        Todo? todo = await _db.Todos.FindAsync(id);
        if (todo == null)
        {
            return NotFound();
        }

        return Ok(todo);
    }

    /// <summary>
    /// ??????? ???? ???????? ? ???? ?????.
    /// ??????? ???? ???????? ? HTTP Body ?? ???????? ?? ? ???????????? ??????????? ID.
    /// </summary>
    /// <param name="todo">??'??? Todo ? ?????? ?????? ???????? ??? ?????????.</param>
    /// <returns>
    /// ActionResult ? ????????? ????????? ?? HTTP 201 Created ????????.
    /// ??????? Location header ? URL ?????? ???????.
    /// </returns>
    /// <remarks>
    /// <strong>HTTP Method:</strong> POST
    /// <strong>Route:</strong> /todoitems
    /// <strong>Request Body:</strong> JSON ??'??? Todo
    /// <strong>Response:</strong> 201 Created + JSON ??'??? + Location header
    /// 
    /// <strong>?????? ?????????:</strong>
    /// 1. Model binding - ??????????? ???????????? JSON ? ??'??? Todo
    /// 2. Add() - ????????? ?? ????????? EF (?? ?? ? ??)
    /// 3. SaveChangesAsync() - ?????????? ? ???? ?????
    /// 4. ??????????? ?????????? ID ?????? ????????
    /// 5. ?????????? Created response ? Location header
    /// 
    /// <strong>??????????? ????????:</strong>
    /// - Id: ??????????? ????? ????? (IDENTITY/AUTOINCREMENT)
    /// - CreatedDate: ?????????????? ? ???????????? Todo
    /// - Priority: ?? ????????????? Medium ???? ?? ???????
    /// - Tags: ???????? ?????? ???? ?? ???????
    /// 
    /// <strong>??????? ??????:</strong>
    /// <code>
    /// POST /todoitems
    /// Content-Type: application/json
    /// 
    /// {
    ///   "name": "??????? ASP.NET Core",
    ///   "description": "?????? ????????? ????????",
    ///   "priority": "High",
    ///   "dueDate": "2024-02-01",
    ///   "tags": ["????????", "??????????"]
    /// }
    /// </code>
    /// 
    /// <strong>??????? ?????????:</strong>
    /// <code>
    /// HTTP 201 Created
    /// Location: /api/todoitems/5
    /// 
    /// {
    ///   "id": 5,
    ///   "name": "??????? ASP.NET Core", 
    ///   "description": "?????? ????????? ????????",
    ///   "isComplete": false,
    ///   "createdDate": "2024-01-15T14:30:00Z",
    ///   "priority": "High",
    ///   "dueDate": "2024-02-01",
    ///   "tags": ["????????", "??????????"]
    /// }
    /// </code>
    /// 
    /// <strong>?????????:</strong>
    /// - ASP.NET Core ??????????? ??????? JSON ?????????
    /// - Model validation attributes ????? ?????? ?? Todo ?????
    /// - ???????????? JSON ??????? 400 Bad Request
    /// 
    /// <strong>???????????????:</strong>
    /// POST ?? ? ????????????? - ????? ?????? ???????? ???? ????????.
    /// </remarks>
    [HttpPost]
    public async Task<ActionResult<Todo>> CreateTodo(Todo todo)
    {
        _db.Todos.Add(todo);
        
        await _db.SaveChangesAsync();
        
        return Created($"/api/todoitems/{todo.Id}", todo);
    }

    /// <summary>
    /// ??????? ??????? ???????? ?????? ??????.
    /// ??????? ??? ?????????? ???? ???????? ?????? ? ??????.
    /// </summary>
    /// <param name="id">????????????? ???????? ??? ???????? ???????.</param>
    /// <param name="inputTodo">??'??? Todo ? ?????? ?????? ??? ?????????.</param>
    /// <returns>
    /// HTTP 204 No Content ??? ????????? ????????? ??? 404 Not Found ???? ???????? ?? ?????.
    /// </returns>
    /// <remarks>
    /// <strong>HTTP Method:</strong> PUT
    /// <strong>Route:</strong> /todoitems/{id}
    /// <strong>Request Body:</strong> JSON ??'??? Todo
    /// <strong>Response:</strong> 204 No Content ??? 404 Not Found
    /// 
    /// <strong>????????? PUT:</strong>
    /// PUT ??????? ????? ?????? ??????? - ??? ?????????? ???? ?????????????? ? inputTodo.
    /// ??? ?????????? ????????? ?????????? PATCH ?????.
    /// 
    /// <strong>?????? ?????????:</strong>
    /// 1. ????? ????????? ???????? ?? ID
    /// 2. ????????? ????????? (404 ???? ?? ????????)
    /// 3. ????????? ???? ???????????? ?????
    /// 4. ?????????? ???? ? ???? ?????
    /// 5. ?????????? 204 No Content (???????? ??? PUT)
    /// 
    /// <strong>???? ?? ???????????:</strong>
    /// - Name - ????? ????????
    /// - IsComplete - ?????? ??????????
    /// - Description - ???? ????????  
    /// - DueDate - ?????? ?????????
    /// - Priority - ????????? ????????
    /// - Tags - ?????? ?????
    /// 
    /// <strong>???? ?? ?? ???????????:</strong>
    /// - Id - ????????? ?????????????
    /// - CreatedDate - ???? ????????? ????????????
    /// 
    /// <strong>??????? ??????:</strong>
    /// <code>
    /// PUT /todoitems/1
    /// Content-Type: application/json
    /// 
    /// {
    ///   "name": "???????? ????? ????????",
    ///   "isComplete": true,
    ///   "description": "???? ?????? ????????",
    ///   "priority": "Low",
    ///   "dueDate": null,
    ///   "tags": ["????????"]
    /// }
    /// </code>
    /// 
    /// <strong>???????? ??????????:</strong>
    /// 
    /// <em>??????? ?????????:</em>
    /// <code>
    /// HTTP 204 No Content
    /// (??????? ???? ?????????)
    /// </code>
    /// 
    /// <em>???????? ?? ????????:</em>
    /// <code>
    /// HTTP 404 Not Found
    /// {
    ///   "type": "https://tools.ietf.org/html/rfc7231#section-6.5.4",
    ///   "title": "Not Found", 
    ///   "status": 404
    /// }
    /// </code>
    /// 
    /// <strong>Change Tracking:</strong>
    /// Entity Framework ??????????? ????????? ????? ? ??????? SQL UPDATE
    /// ?????? ??? ????? ?? ??????? ?????????.
    /// 
    /// <strong>???????????????:</strong>
    /// SaveChangesAsync() ??????????? ? ?????????? - ??? ??? ????? ????????????,
    /// ??? ????? (atomic operation).
    /// </remarks>
    [HttpPut("{id}")]
    public async Task<IActionResult> UpdateTodo(int id, Todo inputTodo)
    {
        Todo? todo = await _db.Todos.FindAsync(id);

        if (todo is null)
        {
            return NotFound();
        }

        todo.Name = inputTodo.Name;
        todo.IsComplete = inputTodo.IsComplete;
        todo.Description = inputTodo.Description;
        todo.DueDate = inputTodo.DueDate;
        todo.Priority = inputTodo.Priority;
        todo.Tags = inputTodo.Tags;

        await _db.SaveChangesAsync();

        return NoContent();
    }

    /// <summary>
    /// ??????? ???????? ? ???? ????? ?? ???????? ???????????????.
    /// ??????? ????? ????????? ?????? ??? ?????????? ???????????.
    /// </summary>
    /// <param name="id">????????????? ???????? ??? ???????? ????????.</param>
    /// <returns>
    /// HTTP 204 No Content ??? ????????? ????????? ??? 404 Not Found ???? ???????? ?? ?????.
    /// </returns>
    /// <remarks>
    /// <strong>HTTP Method:</strong> DELETE
    /// <strong>Route:</strong> /todoitems/{id}
    /// <strong>Response:</strong> 204 No Content ??? 404 Not Found
    /// 
    /// <strong>????????? DELETE:</strong>
    /// DELETE ? ????????????? - ???????? ??????? ? ??? ?? ID ?????? ????????? 404
    /// ????? ??????? ????????? ?????????.
    /// 
    /// <strong>?????? ?????????:</strong>
    /// 1. ????? ???????? ?? ID ? ???? ?????
    /// 2. ????????? ????????? (404 ???? ?? ????????)
    /// 3. ?????????? ??? ????????? ? EF ?????????
    /// 4. ?????????? ???? (???????? ????????? ? ??)
    /// 5. ?????????? 204 No Content
    /// 
    /// <strong>??????? ????????:</strong>
    /// - ???????? ?????????? - ???????? ???? ?? ????? ?????????
    /// - ?????????????? ?????? ????????????? ?? ???????
    /// - ??? ?????? ?????????? "soft delete" (IsDeleted flag)
    /// 
    /// <strong>???????? ??????? ?? ??????????:</strong>
    /// 
    /// <em>??????? ?????????:</em>
    /// <code>
    /// DELETE /todoitems/1
    /// HTTP 204 No Content
    /// (??????? ???? ?????????)
    /// </code>
    /// 
    /// <em>???????? ?? ?????:</em>
    /// <code>
    /// DELETE /todoitems/999  
    /// HTTP 404 Not Found
    /// {
    ///   "type": "https://tools.ietf.org/html/rfc7231#section-6.5.4",
    ///   "title": "Not Found",
    ///   "status": 404
    /// }
    /// </code>
    /// 
    /// <em>???????? ?????????:</em>
    /// <code>
    /// DELETE /todoitems/1 (??? ????????)
    /// HTTP 404 Not Found
    /// (???????????? ?????????)
    /// </code>
    /// 
    /// <strong>?????????? ????????????:</strong>
    /// <code>
    /// // JavaScript ??????? ? ??????????????
    /// if (confirm('???????? ?? ???????? ?????????')) {
    ///   fetch(`/todoitems/${todoId}`, { method: 'DELETE' })
    ///     .then(response => {
    ///       if (response.status === 204) {
    ///         removeFromUI(todoId);
    ///       }
    ///     });
    /// }
    /// </code>
    /// 
    /// <strong>????????????? ???????:</strong>
    /// - Soft Delete: ?????? IsDeleted ???? ??????? ????????? ?????????
    /// - Archive: ??????????? ? ??????? ??????? ????? ??????????
    /// - Cascade Delete: ??????????? ????????? ???'?????? ?????
    /// 
    /// <strong>???????????????:</strong>
    /// ????????? ??????????? ? ?????????? ????? SaveChangesAsync(),
    /// ?? ???????? ??????????????? ?????.
    /// </remarks>
    [HttpDelete("{id}")]
    public async Task<IActionResult> DeleteTodo(int id)
    {
        Todo? todo = await _db.Todos.FindAsync(id);
        if (todo == null)
        {
            return NotFound();
        }

        _db.Todos.Remove(todo);
        await _db.SaveChangesAsync();
        return NoContent();
    }
}